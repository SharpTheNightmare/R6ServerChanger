# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Release

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  
env:
  DOTNETVERSION: "9.0.x"
  APP: "R6ServerChanger"
  SOLUTION: "./R6ServerChanger.sln"
  BUILDOUTPUTPATH: "./src/R6ServerChanger/bin/Release/net9.0-windows"
  PACKOUTPUTPATH: "./out"

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: master
          fetch-depth: 0

      - name: Setup .NET SDK ${{ env.DOTNETVERSION }}
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNETVERSION }}

      - name: Get version
        id: version
        uses: battila7/get-version-action@v2

      - name: Get previous release tag
        id: previousTag
        uses: sammcoe/get-previous-release-action@v1.0.3

      - name: Install dependencies
        run: dotnet restore ${{ env.SOLUTION }}

      - name: Build
        run: dotnet build ${{ env.SOLUTION }} --configuration Release --no-restore /p:Version=${{ steps.version.outputs.version-without-v }}

      - name: Test
        run: dotnet test ${{ env.SOLUTION }} --no-restore --verbosity normal --logger trx --results-directory "TestResults"

      - name: Upload app build artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APP }}-${{ steps.version.outputs.version-without-v }}
          path: ${{ env.BUILDOUTPUTPATH }}

      - name: Upload TestResults build artifact
        uses: actions/upload-artifact@v4
        with:
          name: TestResults
          path: TestResults

      - name: GitHub release
        uses: actions/create-release@v1
        id: release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_name: ${{ steps.version.outputs.version-without-v }}
          tag_name: ${{ github.ref }}
          body: ${{ env.LOG }}
          draft: false
          prerelease: false

      - name: ZIP release artifact
        run: zip -r ${{ env.APP }}-${{ steps.version.outputs.version-without-v }}.zip ${{ env.BUILDOUTPUTPATH }}

      - name: GitHub release assets
        uses: actions/upload-release-asset@v1
        id: release_assets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: ${{ env.APP }}-${{ steps.version.outputs.version-without-v }}.zip
          asset_name: ${{ env.APP }}-${{ steps.version.outputs.version-without-v }}.zip
          asset_content_type: application/zip
